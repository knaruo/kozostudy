OUTPUT_FORMAT("elf32-h8300")
OUTPUT_ARCH(h8300h)
ENTRY("_start")

/* Memory area definitions */
MEMORY
{
    romall(rx)  : org = 0x000000, len = 0x080000    /* 512kb */
    vectors(r)  : org = 0x000000, len = 0x000100    /* top of ROM */
    rom(rx)     : org = 0x000100, len = 0x07ff00

    ramall(rwx) : org = 0xffbf20, len = 0x004000    /* 16kb */
    softvec(rw) : org = 0xffbf20, len = 0x000040
    /* ram area for serial rx buffer */
    buffer(rwx) : org = 0xffdf20, len = 0x001d00
    data(rwx)   : org = 0xfffc20, len = 0x000300
    bootstack(rw)   : org = 0xffff00, len = 0x000000    /* end of RAM?? */
    intrstack(rw)   : org = 0xffff00, len = 0x000000    /* end of RAM?? */
}

SECTIONS
{
    .vectors : {
        vector.o(.data)
    } > vectors

    .text : {
        _text_start = .;
        *(.text)
        _etext = .;
    } > rom

    .rodata : {
        _rodata_start = .;
        *(.strings)
        *(.rodata)
        *(.rodata.*)
        . = ALIGN(4);
        _erodata = .;
    } > rom

    .softvec : {
        _softvec = .;
    } > softvec

    .buffer : {
        _buffer_start = .;
    } > buffer
    
    /* AT> ... init data goes to ROM */
    .data : {
        _data_start = .;
        *(.data)
        _edata = .;
    } > data AT> rom

    .bss : {
        _bss_start = .;
        *(.bss)
        *(COMMON)
        _ebss = .;
    } > data AT> rom

    . = ALIGN(4);
    _end = .;

    .bootstack : {
        _bootstack = .;
    } > bootstack

    .intrstack : {
        _intrstack = .;
    } > intrstack

}
